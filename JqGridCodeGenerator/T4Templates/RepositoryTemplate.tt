<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="System.String" name="baseName" #>
<#@ parameter type="System.String" name="baseNamespace" #>
<#@ parameter type="System.String" name="tableName" #>
<#@ parameter type="System.String" name="primaryKeyName" #>
using GenericCSR.Service;
using GenericCSR.Repository;
using <#= baseNamespace#>.Models;
using <#= baseNamespace#>.Repositories.Interfaces;
using <#= baseNamespace#>.Services.CRUD.Interfaces;

namespace <#= baseNamespace #>.Repositories
{
	public class <#= baseName #>Repository : GenericRepository<<#=tableName#>,ToDoContexType,<#= baseName #>OrderByPredicateCreator,<#= baseName #>FilterPredicateCreator>,I<#= baseName #>Repository
	{
		public <#= baseName #>Repository(ToDoContexType context) : base(context)
        {

        }

		protected override object GetPrimaryKey(<#=tableName#> entity)
		{
			return entity.<#=primaryKeyName#>;		
		}
	}
}