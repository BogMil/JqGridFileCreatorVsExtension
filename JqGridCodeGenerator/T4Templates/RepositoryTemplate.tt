<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="System.String" name="baseName" #>
<#@ parameter type="System.String" name="baseNamespace" #>
<#@ parameter type="System.String" name="tableName" #>
<#@ parameter type="System.String" name="primaryKeyName" #>
<#@ parameter type="System.String" name="baseRepositoryNamespace" #>
<#@ parameter type="System.String" name="baseRepositoryName" #>
<#@ parameter type="System.boolean" name="useBaseRepository" #>
<# if(useBaseRepository) {
	if(baseRepositoryNamespace != baseNamespace+".Repository") #>
using <#= baseRepositoryNamespace #>;
<# }else{ #>
using GenericCSR.Repository;
<# } #>
using <#= baseNamespace#>.Models;
using <#= baseNamespace#>.Repositories.Interfaces;

namespace <#= baseNamespace #>.Repositories
{
	public class <#= baseName #>Repository : 
	<# if(useBaseRepository) {#>
		<#= baseRepositoryName #><<#= tableName #>,<#= baseName #>OrderByPredicateCreator,<#= baseName #>WherePredicateCreator>,
	<# }else{ #>
		GenericRepository<<#=tableName#>,ToDo_ContexType,<#= baseName #>OrderByPredicateCreator,<#= baseName #>WherePredicateCreator>>,
	<# } #>
	I<#= baseName #>Repository
	{
		protected override object GetPrimaryKey(<#=tableName#> entity)
		{
			return entity.<#=primaryKeyName#>;		
		}
	}
}